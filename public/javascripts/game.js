// Generated by CoffeeScript 1.7.1
(function() {
  $(function() {
    var socket;
    console.log('loaded');
    socket = io.connect();
    socket.on("connect", (function(_this) {
      return function() {
        return console.log("connected");
      };
    })(this));
    setTimeout(function() {
      return console.info('check update');
    }, 1000);
    socket.emit('get_all_country');
    socket.emit('get_all_chat');
    $('#register-country-btn').on('click', function() {
      var player_name, register_country;
      player_name = $('#player-name').val() === "" ? "小保方晴子" : $('#player-name').val();
      register_country = $('#register-country').val();
      return socket.emit("save_player_and_country", {
        'player_name': player_name,
        'country': register_country
      });
    });
    $('#init-start').on('click', function() {
      return socket.emit('turn:init_start');
    });
    $('#start').on('click', function() {
      return socket.emit('turn:start');
    });
    $('#draw_card').on('click', function() {
      console.info("draw card");
      return socket.emit('turn:draw');
    });
    $('#sample').on('click', function() {
      return socket.emit('turn:sample');
    });
    $('#action-btn').on('click', function() {
      var action_type;
      action_type = $('#action-type').val();
      return socket.emit('turn:action', {
        'actionType': action_type
      });
    });
    $('#turn_end').on('click', function() {
      return socket.emit('turn:finish');
    });
    $('#chat-button').on('click', function() {
      var chat;
      chat = $("#chat-msg").val();
      $("#chat-msg").val("");
      return socket.emit('chat:on', {
        "msg": chat
      });
    });
    $('#game-end').on('click', function() {
      return socket.emit('game:end');
    });
    socket.on('turn:country_selected', function(data) {
      return alert("" + data.user_id + "が" + data.country + "を選びました。");
    });
    socket.on('turn:setting_msg', function(data) {
      return alert("" + data.player + "の初期設定が終わりました。");
    });
    socket.on("turn:start_msg", function(data) {
      return alert("" + data.name + "のターンです。");
    });
    socket.on('turn:draw_end', function(data) {
      console.info("draw_end");
      return alert("" + data.player + "が" + cardType + "を引きました。" + data.player + "は行動を選択して下さい");
    });
    socket.on('turn:action_selected', (function(_this) {
      return function(data) {
        var actionType, amount, targetCountry;
        actionType = data.action;
        targetCountry = $('#target-country').val();
        amount = $('#amount').val();
        return socket.emit("turn:" + actionType, {
          'country': targetCountry,
          'amount': amount
        });
      };
    })(this));
    socket.on("turn:action_buy_end", (function(_this) {
      return function(data) {
        var country;
        return country = data.country_name;
      };
    })(this));
    socket.on('all_country', (function(_this) {
      return function(data) {
        if ($('#countries tbody').children().length === 0) {
          return _.map(data.countries, function(country) {
            var html;
            html = "<tr id='" + country.name + "'> <td class='country-name'> " + country.name + " </td> <td class='market-scale'> " + country.market_scale + " </td> <td class='market-rest'> " + country.market_rest + " </td> <td class='max-price'> " + country.max_price + " </td> <td class='buying_price'> " + country.buying_price + " </td> <td class='owner'> " + country.player_name + " </td> </tr>";
            return $('#countries tbody').append(html);
          });
        }
      };
    })(this));
    socket.on('all_chat', (function(_this) {
      return function(data) {
        if ($('#chat-area').children().length === 0) {
          return _.map(data.chats, function(chat) {
            var html;
            html = "<div class='sender'> " + chat.sender + " : </div> <div class='message'> " + chat.message + " </div>";
            return $('#chat-area').append(html);
          });
        }
      };
    })(this));
    socket.on('update_country_owner_name', (function(_this) {
      return function(data) {
        var country, player_name;
        country = data.country;
        player_name = data.name;
        return $('#' + ("" + country + " .owner")).html("本社..." + player_name);
      };
    })(this));
    socket.on('initial_player_status', (function(_this) {
      return function(data) {
        var html;
        html = "<div class='name'> 名前:" + data.name + " </div> <div class='country'> 国:" + data.country + " </div> <div class='cash'> キャッシュ:" + data.cash + " </div> <div class='income'> 純利益:" + data.income + " </div> <div class='number-of-product'> 製品数:" + data.product + " </div>";
        return $('#player-status').append(html);
      };
    })(this));
    socket.on("warn:not_your_turn", (function(_this) {
      return function(msg) {
        return alert('おめえのターンじゃねぇから！');
      };
    })(this));
    socket.on("chat:send", (function(_this) {
      return function(data) {
        var html;
        html = "<div class='sender'> " + data.sender + " : </div> <div class='message'> " + data.message + " </div>";
        return $("#chat-area").append(html);
      };
    })(this));
    socket.on('game:ended', (function(_this) {
      return function(data) {
        return alert('game終了だ！去れ！ 別に帰れって言ってるわけじゃないんだからねっっっ//');
      };
    })(this));
    socket.on("warn:already_init", (function(_this) {
      return function(msg) {
        return alert('もう登録しとるやろ！');
      };
    })(this));
    socket.on("warn:already_draw", (function(_this) {
      return function(msg) {
        return alert('もう引いとるやろ！');
      };
    })(this));
    socket.on("turn:finished", (function(_this) {
      return function(data) {
        return alert("ターン終了。次は" + data.player_name + "のターンです");
      };
    })(this));
    socket.on("msg:push", (function(_this) {
      return function(msg) {
        var date;
        date = new Date();
        return console.info('push');
      };
    })(this));
    return socket.on("msg updateDB", (function(_this) {
      return function() {
        return console.info('msg');
      };
    })(this));
  });

}).call(this);
